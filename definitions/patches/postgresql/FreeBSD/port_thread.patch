--- src/port/thread.c.orig	2012-04-18 14:30:54.000000000 +0200
+++ src/port/thread.c	2012-04-18 14:38:51.000000000 +0200
@@ -89,26 +89,21 @@
 pqGetpwuid(uid_t uid, struct passwd * resultbuf, char *buffer,
 		   size_t buflen, struct passwd ** result)
 {
-#if defined(FRONTEND) && defined(ENABLE_THREAD_SAFETY) && defined(HAVE_GETPWUID_R)
-
-#ifdef GETPWUID_R_5ARG
-	/* POSIX version */
-	getpwuid_r(uid, resultbuf, buffer, buflen, result);
-#else
-
-	/*
-	 * Early POSIX draft of getpwuid_r() returns 'struct passwd *'.
-	 * getpwuid_r(uid, resultbuf, buffer, buflen)
-	 */
-	*result = getpwuid_r(uid, resultbuf, buffer, buflen);
-#endif
-#else
-
-	/* no getpwuid_r() available, just use getpwuid() */
-	*result = getpwuid(uid);
-#endif
-
-	return (*result == NULL) ? -1 : 0;
+    /* @author: dmilith */
+    char homeDir[16];
+    char userName[16];
+    *result = (struct passwd *)malloc(sizeof(struct passwd));
+    sprintf(userName, "%s", getenv("USER"));
+    sprintf(homeDir, "%s", getenv("HOME"));
+
+    (*result)->pw_uid = uid;
+    (*result)->pw_gid = 0; /* wheel */
+    (*result)->pw_name = (char *)malloc((strlen(userName)+1)*sizeof(char));
+    sprintf((*result)->pw_name, "%s", userName);
+    (*result)->pw_dir = (char *)malloc((strlen(homeDir)+1)*sizeof(char));
+    sprintf((*result)->pw_dir, "%s", homeDir);
+
+	return 0;
 }
 #endif

