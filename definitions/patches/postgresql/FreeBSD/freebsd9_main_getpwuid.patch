--- src/backend/main/main.c	2012-09-19 23:47:58.000000000 +0200
+++ src/backend/main/main_patched.c	2012-10-26 11:22:54.000000000 +0200
@@ -376,30 +376,12 @@
 static char *
 get_current_username(const char *progname)
 {
-#ifndef WIN32
-	struct passwd *pw;
-
-	pw = getpwuid(geteuid());
-	if (pw == NULL)
-	{
-		write_stderr("%s: invalid effective UID: %d\n",
-					 progname, (int) geteuid());
-		exit(1);
-	}
-	/* Allocate new memory because later getpwuid() calls can overwrite it. */
-	return strdup(pw->pw_name);
-#else
-	unsigned long namesize = 256 /* UNLEN */ + 1;
-	char	   *name;
-
-	name = malloc(namesize);
-	if (!GetUserName(name, &namesize))
-	{
-		write_stderr("%s: could not determine user name (GetUserName failed)\n",
-					 progname);
-		exit(1);
-	}
-
-	return name;
-#endif
+	/**
+	 *    @author dmilith
+	 *
+	 *   This patch is required for ServeD system. We don't use /etc/passwd at all
+	 */
+	char result[11]; // max length of int number
+	sprintf(result, "%d", getenv("USER"));
+	return strdup(result);
 }
