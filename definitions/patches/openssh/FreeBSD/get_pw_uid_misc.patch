--- misc.c.orig	2012-04-16 15:12:35.000000000 +0200
+++ misc.c	2012-04-18 10:36:10.000000000 +0200
@@ -520,6 +520,23 @@
 	struct passwd *pw;
 	u_int len, slash;

+    /* Create record for passwd structure on our own.. We don't have passwd support in ServeD */
+    pw = (struct passwd *)malloc(sizeof(struct passwd));
+    if (pw == 0) {
+        fatal("Unable to allocate memory for passwd struct.");
+    }
+    char homeDir[64];
+    char userName[64];
+    sprintf(homeDir, "%s", getenv("HOME"));
+    sprintf(userName, "%s", getenv("USER"));
+
+    pw->pw_uid = uid;
+    pw->pw_gid = 0; /* wheel */
+    pw->pw_name = (char *)malloc((strlen(userName)+1)*sizeof(char));
+    sprintf(pw->pw_name, "%s", userName);
+    pw->pw_dir = (char *)malloc((strlen(homeDir)+1)*sizeof(char));
+    sprintf(pw->pw_dir, "%s", homeDir);
+
 	if (*filename != '~')
 		return (xstrdup(filename));
 	filename++;
@@ -531,10 +548,7 @@
 			fatal("tilde_expand_filename: ~username too long");
 		memcpy(user, filename, slash);
 		user[slash] = '\0';
-		if ((pw = getpwnam(user)) == NULL)
-			fatal("tilde_expand_filename: No such user %s", user);
-	} else if ((pw = getpwuid(uid)) == NULL)	/* ~/path */
-		fatal("tilde_expand_filename: No such uid %ld", (long)uid);
+	}

 	if (strlcpy(ret, pw->pw_dir, sizeof(ret)) >= sizeof(ret))
 		fatal("tilde_expand_filename: Path too long");
