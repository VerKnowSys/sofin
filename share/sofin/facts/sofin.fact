SOFIN_VERSION="1.1.32"


SOFIN_ORIGIN="git@bitbucket.org:verknowsys/${DEFAULT_NAME}${DEFAULT_GIT_DIR_NAME}"
SOFIN_ORIGIN_ALT="git@github.com:VerKnowSys/${DEFAULT_NAME}${DEFAULT_GIT_DIR_NAME}"

DEFAULT_RELEASE_HOST="v" # NOTE: use value for v from /etc/hosts
DEFAULT_RELEASE_PATH="http://dmilith.verknowsys.com/Public/Sofin-releases"
DEFAULT_RELEASE_REMOTE_PATH="/home/dmilith/Web/Public/Sofin-releases"

DEFAULT_ISSUE_REPORT_SITE="https://bitbucket.org/verknowsys/sofin/issues"
DEFAULT_ISSUE_REPORT_SITE_ALT="https://github.com/VerKnowSys/sofin/issues"

DEFAULT_DEFINITIONS_REPOSITORY="${DEFAULT_DEFINITIONS_REPOSITORY:-https://verknowsys@bitbucket.org/verknowsys/${DEFAULT_SOFIN_DEFINITIONS_NAME}${DEFAULT_GIT_DIR_NAME}}"
DEFAULT_DEFINITIONS_REPOSITORY_ALT="${DEFAULT_DEFINITIONS_REPOSITORY_ALT:-git@github.com:VerKnowSys/${DEFAULT_SOFIN_DEFINITIONS_NAME}${DEFAULT_GIT_DIR_NAME}}"
DEFAULT_DEFINITIONS_BRANCH="${DEFAULT_DEFINITIONS_BRANCH:-stable}"

MAIN_SOFTWARE_ADDRESS="${MAIN_SOFTWARE_ADDRESS:-software.verknowsys.com}"
MAIN_COMMON_NAME="${MAIN_COMMON_NAME:-Common}"
MAIN_SOFTWARE_PREFIX="${MAIN_SOFTWARE_PREFIX:-/Mirror}"
MAIN_BINARY_PATH="${MAIN_BINARY_PATH:-/software/binary}"
MAIN_BINARY_PREFIX="${MAIN_SOFTWARE_PREFIX}${MAIN_BINARY_PATH}"
COMMON_BINARY_REMOTE="${MAIN_BINARY_PREFIX}/${MAIN_COMMON_NAME}"
MAIN_BINARY_REPOSITORY="http://${MAIN_SOFTWARE_ADDRESS}/binary/"
MAIN_SOURCE_REPOSITORY="http://${MAIN_SOFTWARE_ADDRESS}/source/"
MAIN_COMMON_REPOSITORY="${MAIN_BINARY_REPOSITORY}${MAIN_COMMON_NAME}"
MAIN_PORT="${MAIN_PORT:-60022}"
MAIN_USER="${MAIN_USER:-sofin}"

SERVICES_DIR="${SERVICES_DIR:-/Services/}"
SOFTWARE_DIR="${SOFTWARE_DIR:-/Software/}"

DEFINITIONS_DEFAULT_FILE_NAME="defaults" # NOTE: Base "def" file, loaded before each software definition
DEFINITIONS_LISTS_FILE_NAME="lists" # NOTE: It's name of lists directory from "Sofin-definitions" repository
DEFINITIONS_INITIAL_FILE_NAME="initial-definitions" # NOTE: if no git vailable in system, use initial snapshot
DEFINITIONS_BASE="definitions" # NOTE: It's main directory in "Sofin-definitions" repository

DEFINITIONS_DIR="${CACHE_DIR}${DEFINITIONS_BASE}/${DEFINITIONS_BASE}/"
DEFINITIONS_DEFAULTS="${DEFINITIONS_DIR}${DEFINITIONS_DEFAULT_FILE_NAME}${DEFAULT_DEF_EXT}"
DEFINITIONS_LISTS_DIR="${CACHE_DIR}${DEFINITIONS_BASE}/${DEFINITIONS_LISTS_FILE_NAME}/"

CCACHE_BIN_OPTIONAL="${SOFTWARE_DIR}Ccache/exports/ccache"
DEFAULT_PATH="${DEFAULT_PATH:-/bin:/usr/bin:/sbin:/usr/sbin:/usr/pkg/bin:/usr/pkg/sbin}"
SOFIN_BIN_SHORT="${SOFIN_BIN##*/}"

# Build timestamp in seconds since 1970
TIMESTAMP="${TIMESTAMP:-$(${DATE_BIN} ${DEFAULT_DATE_TS_OPTS} 2>/dev/null)}"

# Hardened system support:
DEFAULT_SECURITY_STATE_FILE="${SOFTWARE_DIR}.sys-security-state.${TIMESTAMP}"

# LLVM backend:
C_COMPILER_NAME="clang"
CXX_COMPILER_NAME="${C_COMPILER_NAME}++"
CPP_PREPROCESSOR_NAME="${C_COMPILER_NAME}-cpp"

# GNU backend:
C_COMPILER_NAME_ALT="gcc"
CXX_COMPILER_NAME_ALT="g++"
CPP_PREPROCESSOR_NAME_ALT="cpp"

# Compiler cross platform defaults:
COMMON_FLAGS="-fPIC"
# NOTE: XXX: To add -Werror=format-security as a default, we have to get rid of GNU software ;)
COMMON_COMPILER_FLAGS="${COMMON_FLAGS} -fno-strict-overflow -w -Wformat -Wformat-security -fstack-protector-strong --param ssp-buffer-size=4 -D_FORTIFY_SOURCE=2" # NOTE: comment out "-fno-strict-overflow -fstack-protector-all" on Centos 5

COMMON_LDFLAGS="${COMMON_FLAGS}"
DEFAULT_LDFLAGS="${COMMON_FLAGS}"
DEFAULT_COMPILER_FLAGS="${COMMON_COMPILER_FLAGS}"

# Some lazy stuff:
FIRST_ARG_GUARD="${CUT_BIN} -f1 -d' ' 2>/dev/null"
WORDS_COUNT_GUARD="${WC_BIN} -w 2>/dev/null | ${SED_BIN} 's/ //g' 2>/dev/null"
FILES_COUNT_GUARD="${WC_BIN} -l 2>/dev/null | ${SED_BIN} 's/ //g' 2>/dev/null" # XXX TODO: get rid of wc -l, replace with wc -w
OLDEST_BUILD_DIR_GUARD="${SORT_BIN} -k1 -n 2>/dev/null | ${TAIL_BIN} -n1 2>/dev/null | ${CUT_BIN} -f2 -d' ' 2>/dev/null | ${SORT_BIN} -k1 -n 2>/dev/null | ${TAIL_BIN} -n1 2>/dev/null | ${CUT_BIN} -f2 -d' ' 2>/dev/null"
NEWLINES_TO_SPACES_GUARD="${TR_BIN} '\n' ' ' 2>/dev/null"
CUT_TRAILING_SPACES_GUARD="${SED_BIN} 's/ *$//' 2>/dev/null"
MATCH_PRINT_STDOUT_GUARD="${EGREP_BIN} '^.*(\/zfs send|\/zfs rec|\/zpool |\/fetch |\/curl |\/wget |\/ssh |\/scp |\/git |\/svn |\/cvs |\/bzr |\/hg ).*$' >/dev/null 2>&1"
CALCULATE_SHA_GUARD="${SHA_BIN} 2>/dev/null | ${CUT_BIN} -d' ' -f1 2>/dev/null"
HOST_ADDRESS_GUARD="${CUT_BIN} -d' ' -f2 2>/dev/null | ${CUT_BIN} -d'#' -f1 2>/dev/null"
CUTOFF_DEF_EXT_GUARD="${SED_BIN} -e \"s#${DEFAULT_DEF_EXT}##\" 2>/dev/null"
DUP_OUT_TO_ERR_GUARD="${TEE_BIN} /dev/stderr"
DUP_ERR_TO_OUT_GUARD="${TEE_BIN} /dev/stdout"

# Tracing of Sofin itself:
if [ -n "${SOFIN_TRACE}" ]; then
    # NOTE: may be useful later:
    #
    if [ "YES" = "${CAP_TERM_ZSH}" ]; then
        setopt sourcetrace
        setopt xtrace
    elif [ "YES" = "${CAP_TERM_BASH}" ]; then
        set -o xtrace
    else
        set -o xtrace
    fi
    set -x
    ${PRINTF_BIN} "Enabled trace mode\n"
fi

if [ -n "${SOFIN_VERBOSE}" ]; then
    if [ "YES" = "${CAP_TERM_ZSH}" -o \
         "YES" = "${CAP_TERM_BASH}" ]; then
        set -o verbose
    else
        set -v
    fi
    ${PRINTF_BIN} "Enabled verbose mode\n"
fi
