SOFIN_VERSION="1.2.9"

DEFAULT_RELEASE_HOST="git.verknowsys.com" # NOTE: use value for v from /etc/hosts
DEFAULT_RELEASE_PATH="http://dmilith.verknowsys.com/Public/${SOFIN_BUNDLE_NAME}-releases"
DEFAULT_RELEASE_REMOTE_PATH="/home/dmilith/Web/Public/${SOFIN_BUNDLE_NAME}-releases"

MAIN_SOFTWARE_ADDRESS="${MAIN_SOFTWARE_ADDRESS:-software.verknowsys.com}"
MAIN_COMMON_NAME="${MAIN_COMMON_NAME:-Common}"
MAIN_SOFTWARE_PREFIX="${MAIN_SOFTWARE_PREFIX:-/Mirror}"
MAIN_BINARY_PATH="${MAIN_BINARY_PATH:-/software/binary}"
MAIN_BINARY_PREFIX="${MAIN_SOFTWARE_PREFIX}${MAIN_BINARY_PATH}"
COMMON_BINARY_REMOTE="${MAIN_BINARY_PREFIX}/${MAIN_COMMON_NAME}"
MAIN_BINARY_REPOSITORY="http://${MAIN_SOFTWARE_ADDRESS}/binary/"
MAIN_SOURCE_REPOSITORY="http://${MAIN_SOFTWARE_ADDRESS}/source/"
MAIN_COMMON_REPOSITORY="${MAIN_BINARY_REPOSITORY}${MAIN_COMMON_NAME}"
MAIN_SSH_PORT="${MAIN_SSH_PORT:-60022}"

CCACHE_BIN_OPTIONAL="${SOFTWARE_DIR}/Ccache/exports/ccache" # NOTE: pick first ccache it can find
SOFIN_BIN_SHORT="${SOFIN_BIN##*/}"

# Build timestamp in seconds since 1970
TIMESTAMP="${TIMESTAMP:-$(${DATE_BIN} "${DEFAULT_DATE_TS_OPTS}" 2>/dev/null)}"

# Hardened system support:
DEFAULT_SECURITY_STATE_FILE="${SOFTWARE_DIR}/.sys-security-state.${TIMESTAMP}"

# LLVM backend:
CC_NAME="clang"
CXX_NAME="${CC_NAME}++"
CPP_NAME="${CC_NAME}-cpp"

# GNU backend:
CC_NAME_ALT="gcc"
CXX_NAME_ALT="g++"
CPP_NAME_ALT="cpp"

# Compiler cross platform defaults:
COMMON_FLAGS="-w -fPIC"

# NOTE: XXX: To add -Werror=format-security as a default, we have to get rid of GNU software ;)
# NOTE:-D is recognized as "a macro" and rejected f.i. configure script of "c-ares" definiton
# NOTE: Under production systems, explicitly use RELRO and BINDNOW:
LTO_CFLAGS=""
HARDEN_CFLAGS="-fstack-protector -fstack-protector-strong -fstack-protector-all --param ssp-buffer-size=4 -fno-strict-overflow -Wformat -Wformat-security"
HARDEN_OFLOW_CFLAGS="-ftrapv"
HARDEN_SAFE_STACK_FLAGS="-fsanitize=safe-stack"
HARDEN_CMACROS="-D_FORTIFY_SOURCE=2"
HARDEN_CFLAGS_PRODUCTION="-fPIE -Wl,-z,relro,-z,now"
HARDEN_LDFLAGS_PRODUCTION="-pie -z relro -z now"

if [ "${SYSTEM_NAME}" = "Darwin" ] || \
   [ "YES" != "${CAP_SYS_HARDENED}" ]; then
    # not supported under macOS
    unset HARDEN_CFLAGS_PRODUCTION HARDEN_LDFLAGS_PRODUCTION HARDEN_SAFE_STACK_FLAGS
    # override -fsanitize=safe-stack which is not supported under Darwin
    LTO_CFLAGS="-flto"
fi
# NOTE: set base + hardened compiler options:
COMMON_COMPILER_FLAGS="${COMMON_FLAGS} ${HARDEN_CFLAGS} ${HARDEN_CFLAGS_PRODUCTION} ${HARDEN_CMACROS}" # NOTE: this may be unset here! Look above for Darwin configuration block for details.
COMMON_LDFLAGS="${COMMON_FLAGS} ${HARDEN_LDFLAGS_PRODUCTION}" # NOTE: this may be unset here! Look above for Darwin configuration block for details.

# NOTE: initial setup, later used by compiler_setup():
DEFAULT_COMPILER_FLAGS="${COMMON_COMPILER_FLAGS}"
DEFAULT_LINKER_FLAGS="${COMMON_LDFLAGS}"

# Tracing of Sofin itself:
if [ -n "${SOFIN_TRACE}" ]; then
    # NOTE: may be useful later:
    #
    if [ "YES" = "${CAP_TERM_ZSH}" ]; then
        setopt sourcetrace
        setopt xtrace
    elif [ "YES" = "${CAP_TERM_BASH}" ]; then
        set -o xtrace
    else
        set -o xtrace
    fi
    set -x
    ${PRINTF_BIN} "Enabled trace mode\n"
fi

if [ -n "${SOFIN_VERBOSE}" ]; then
    if [ "YES" = "${CAP_TERM_ZSH}" ] || \
       [ "YES" = "${CAP_TERM_BASH}" ]; then
        set -o verbose
    else
        set -v
    fi
    ${PRINTF_BIN} "Enabled verbose mode\n"
fi
