#!/bin/sh
# @author: Daniel (dmilith) Dettlaff (dmilith@verknowsys.com)


# config settings
DEBUG="false"

LOG="/tmp/sofin-make-defs.log"
DEFINITION_SNAPSHOT_FILE="defs.tar.bz2"
DEFAULT_SOURCE_PATH="/Mirror/software/source"
DEFAULT_HOST="software.verknowsys.com"
DEFAULT_USER="sofin"
DEFAULT_PORT="60022"

# config binary requirements definitions
PRINTF_BIN="/usr/bin/printf"
DIRNAME_BIN="/usr/bin/dirname"
TAIL_BIN="/usr/bin/tail"
CUT_BIN="/usr/bin/cut"
LS_BIN="/bin/ls"
ID_BIN="/usr/bin/id"
MKDIR_BIN="/bin/mkdir"
TAR_BIN="/usr/bin/tar"
CAT_BIN="/bin/cat"
TR_BIN="/usr/bin/tr"
TOUCH_BIN="/usr/bin/touch"
RM_BIN="/bin/rm"
DATE_BIN="/bin/date"
PATCH_BIN="/usr/bin/patch"
SED_BIN="/usr/bin/sed"
CHOWN_BIN="/usr/sbin/chown"
GREP_BIN="/usr/bin/grep"
FETCH_BIN="/usr/bin/fetch"
UNAME_BIN="/usr/bin/uname"
SCP_BIN="/usr/bin/scp"

# ANSI color definitions
red='\033[31;40m'
green='\033[32;40m'
yellow='\033[33;40m'
blue='\033[34;40m'
magenta='\033[35;40m'
cyan='\033[36;40m'
gray='\033[37;40m'
white='\033[38;40m'
reset='\033[0m'

# helpers
cecho () {
    ${PRINTF_BIN} "${2}${1}${reset}\n"
}


debug () {
    if [ "${DEBUG}" = "true" ]; then
        cecho " ~ $1" ${magenta}
    else
        cecho " ~ $1" ${magenta} >> ${LOG}
    fi
}


warn () {
    cecho " ! $1" ${yellow}
}


note () {
    cecho " * $1" ${green}
}


error () {
    cecho " # $1" ${red}
}


check_command_result () {
    if [ -z "$1" ]; then
        error "No param given for check_command_result()!"
        exit 1
    fi
    if [ "$1" = "0" ]; then
        debug "CORRECT"
    else
        error "FAILED"
        exit 1
    fi
}


check_required_dirs_and_create_snapshot () {
    REQS="definitions lists"
    note "Checking directories…"
    for req in ${REQS}; do
        if [ ! -d "${req}" ]; then
            note "No '${req}' folder found in current directory. Aborting…"
            exit 1
        fi
    done
    note "Creating snapshot…"
    tar_options="cfj"
    if [ "${DEBUG}" = "true" ]; then
        tar_options="${tar_options}v"
    fi
    ${TAR_BIN} ${tar_options} "${DEFINITION_SNAPSHOT_FILE}" ${REQS}
    check_command_result $?
}


note "Creating definitions and lists package: ${DEFINITION_SNAPSHOT_FILE}"
check_required_dirs_and_create_snapshot

note "Sending definitions to repositories…"
for mirror in $(host ${DEFAULT_HOST} | awk '{print $4}'); do
    note "Uploading definitions to: ${mirror}"
    ${SCP_BIN} -P ${DEFAULT_PORT} "${DEFINITION_SNAPSHOT_FILE}" "${DEFAULT_USER}@${mirror}:${DEFAULT_SOURCE_PATH}/definitions" >> "${LOG}"
    check_command_result $?
done

note "Removing cached ${DEFINITION_SNAPSHOT_FILE}…"
${RM_BIN} ${DEFINITION_SNAPSHOT_FILE}

sofin update
note "Job's done."
exit
