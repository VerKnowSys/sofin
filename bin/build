#!/bin/sh
# @author: Daniel (dmilith) Dettlaff (dmilith at me dot com)


# load configuration from sofin.conf
CONF_FILE="sofin.conf.sh"
. "src/${CONF_FILE}"

# choose C compiler, if any
export CXX="/usr/bin/g++"
if [ -x "/usr/bin/clang++" ]; then
    export CXX="/usr/bin/clang++"
fi
if [ ! -x "${CXX}" ]; then
    error "C++ compiler is required to install Sofin"
    exit 1
fi

readonly CLANG_OPTIONS="-Os -fPIC -fPIE"

shell_configuration=$(${CAT_BIN} <<EOF
if [ "\$(${ID_BIN} -u)" = "0" ]; then
    if [ -e "/etc/profile_sofin" ]; then
        . /etc/profile_sofin
    fi
    trap "source /etc/profile_sofin" USR2
else
    if [ -e \$HOME/.profile ]; then
        . \$HOME/.profile
    fi
    trap "source \$HOME/.profile" USR2
fi
export SHELL_PID="\$\$"
EOF
)


update_env_files () {
    env_files="/etc/zshenv /etc/bashrc /etc/profile"
    for i in ${env_files}; do
        if [ -f "${i}" ]; then
            ${GREP_BIN} -q "SHELL_PID" "${i}" 2>/dev/null
            if [ "$?" = "0" ]; then
                continue
            else
                note "Updating environment file: ${i}"
                echo "${shell_configuration}" >> "${i}"
                check_command_result $?
            fi
        else
            note "Creating environment file: ${i}"
            echo "${shell_configuration}" >> "${i}"
            check_command_result $?
        fi
    done
}


install_base () {
    build_natives
    if [ "${INSTALL}" = "YES" ]; then
        if [ "$(${ID_BIN} -u)" = "0" ]; then
            note "Removing already installed Sofin files.."
            ${RM_BIN} -fv "${PREFIX}/usr/bin/s"
            ${RM_BIN} -fv "${PREFIX}/usr/bin/sofin"
            ${RM_BIN} -fv "${PREFIX}/usr/bin/sofin-version-utility"
            ${RM_BIN} -fv "${PREFIX}/usr/bin/sofin-microseconds"
            ${RM_BIN} -fv "${PREFIX}/etc/${CONF_FILE}"
        fi
        install_sofin
    fi
}


build_natives () {
    if [ -x "${CXX}" ]; then
        note "C++ compiler available. Using: ${CXX}"

        ${CXX} ${CLANG_OPTIONS} -o bin/sofin-microseconds src/sofin_microseconds.cc && \
        note "Sofin microseconds utility has been successfully built" && \
        ${CXX} ${CLANG_OPTIONS} -o bin/sofin-version-utility src/sofin-version-utility.cc && \
        note "Sofin version utility has been successfully built"

        # if [ "${SYSTEM_NAME}" = "Darwin" ]; then
        #     ${CXX} ${CLANG_OPTIONS} -c -I./src/dylibbundler ./src/dylibbundler/Settings.cpp -o src/.Settings.o && \
        #     ${CXX} ${CLANG_OPTIONS} -c -I./src/dylibbundler ./src/dylibbundler/DylibBundler.cpp -o src/.DylibBundler.o && \
        #     ${CXX} ${CLANG_OPTIONS} -c -I./src/dylibbundler ./src/dylibbundler/Dependency.cpp -o src/.Dependency.o && \
        #     ${CXX} ${CLANG_OPTIONS} -c -I./src/dylibbundler ./src/dylibbundler/main.cpp -o src/.main.o && \
        #     ${CXX} ${CLANG_OPTIONS} -c -I./src/dylibbundler ./src/dylibbundler/Utils.cpp -o src/.Utils.o && \
        #     ${CXX} ${CLANG_OPTIONS} -o bin/sofin-dylibbundler src/.Settings.o src/.DylibBundler.o src/.Dependency.o src/.main.o src/ .Utils.o && \
        #     note "Dylib bundler has been built"
        # fi
    else
        error "C++ compiler is required to continue"
        exit 1
    fi
}


install_sofin () {
    note "Putting Sofin files into place in prefix: ${PREFIX}"
    if [ ! -z "${PREFIX}" ]; then
        ${MKDIR_BIN} -p "${PREFIX}" "${PREFIX}/etc" "${PREFIX}/usr/bin"
    fi
    ${CP_BIN} -v "src/${CONF_FILE}" "${PREFIX}/etc/${CONF_FILE}" && \
    # if [ "${SYSTEM_NAME}" = "Darwin" ]; then
    #     ${CP_BIN} -v "bin/sofin-dylibbundler" "${PREFIX}/usr/bin/sofin-dylibbundler"
    # fi
    ${CP_BIN} -v "bin/sofin-version-utility" ${PREFIX}/usr/bin/sofin-version-utility && \
    ${CP_BIN} -v "bin/sofin-microseconds" ${PREFIX}/usr/bin/sofin-microseconds && \
    ${CP_BIN} -v "src/sofin.sh" ${PREFIX}/usr/bin/s && \
    sofin_version="$(${GREP_BIN} 'readonly SOFIN_VERSION=' /etc/sofin.conf.sh 2>/dev/null | ${AWK_BIN} '{ gsub(/\"/, "", $2); gsub(/SOFIN_VERSION=/, "", $2); print $2; }' 2>/dev/null)" && \
    note "Sofin v${sofin_version} installed." && \
    note "Type \"s usage\" for help." && \
    note "Read https://bitbucket.org/verknowsys/sofin for more details."
}
