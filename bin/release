#!/usr/bin/env sh
# @author: Daniel (dmilith) Dettlaff (dmilith at me dot com)

. share/sofin/loader

readonly SOFIN_ORIGIN="git@bitbucket.org:verknowsys/sofin.git"
readonly SOFIN_MIRROR="git@github.com:VerKnowSys/sofin.git"

note "Pulling from origin and mirror.."
${GIT_BIN} pull "${SOFIN_ORIGIN}" >/dev/null
${GIT_BIN} pull "${SOFIN_MIRROR}" >/dev/null

note "Pushing repo to origin: ${SOFIN_ORIGIN} and mirror: ${SOFIN_MIRROR}"
${GIT_BIN} push --all "${SOFIN_ORIGIN}" >/dev/null && \
${GIT_BIN} push --tags "${SOFIN_ORIGIN}" >/dev/null && \
${GIT_BIN} push --all "${SOFIN_MIRROR}" >/dev/null && \
${GIT_BIN} push --tags "${SOFIN_MIRROR}" >/dev/null && \
bin/clean
${MKDIR_BIN} -p releases
version="$(${GREP_BIN} 'SOFIN_VERSION=' share/sofin/facts/sofin.fact | ${AWK_BIN} '{ gsub(/\"/, "", $1); gsub(/SOFIN_VERSION=/, "", $1); print $1; }')"
if [ -z "${version}" ]; then
    error "Fail: Empty version."
fi
base_name="sofin-${version}"
archive_name="${base_name}.txz"
note "Preparing package: ${archive_name} with version: ${version}"

${TAR_BIN} cJf releases/${archive_name} README.md src bin
${MKDIR_BIN} -p releases/${base_name}
${MV_BIN} releases/${archive_name} releases/${base_name}/
cd releases/${base_name}
${TAR_BIN} xf ${archive_name}
${RM_BIN} -f ${archive_name}
cd ..
${TAR_BIN} cJf ${archive_name} ./${base_name}
${RM_BIN} -rf ${base_name}
cd ..

if [ "${USER}" != "dmilith" ]; then
    warn "You should be dmilith, to push a release."
else
    DEST_HOST="v"
    DEST_USER="sofin"
    DEST_PATH="/home/dmilith/Web/Public/Sofin-releases"
    HTTP_PATH="http://dmilith.verknowsys.com/Public/Sofin-releases"
    DEFAULT_REPOSITORY="https://verknowsys@bitbucket.org/verknowsys/sofin-definitions.git" # main sofin definitions repository
    DEFAULT_REPOSITORY_MIRROR="git@github.com:VerKnowSys/sofin-definitions.git" # alternative sofin definitions repository
    INITIALS="${DEFINITIONS_INITIAL_FILE_NAME}"
    DEST_NAME="sofin-${version}${DEFAULT_ARCHIVE_EXT}"

    note "Pushing Sofin package to remote server: "
    ${CHMOD_BIN} a+r releases/${DEST_NAME}
    ${SCP_BIN} releases/${DEST_NAME} "${DEST_HOST}:${DEST_PATH}" >/dev/null
    ${SSH_BIN} ${DEST_USER}@${DEST_HOST} "source ~/.functions.sh && gather-source ${HTTP_PATH}/${DEST_NAME}"

    note "Preparing initial snapshot from repository: ${DEFAULT_REPOSITORY}"
    ${GIT_BIN} clone ${DEFAULT_REPOSITORY} sofin-definitions >/dev/null
    cd ./sofin-definitions
    ${GIT_BIN} push --all "${DEFAULT_REPOSITORY_MIRROR}" >/dev/null
    ${GIT_BIN} push --tags "${DEFAULT_REPOSITORY_MIRROR}" >/dev/null
    ${TAR_BIN} cJf ../releases/${INITIALS}${DEFAULT_ARCHIVE_EXT} definitions lists README.md >/dev/null
    cd ..

    note "Pushing snapshot to remote server(s)"
    ${CHMOD_BIN} a+r releases/${INITIALS}${DEFAULT_ARCHIVE_EXT}
    ${SCP_BIN} releases/${INITIALS}${DEFAULT_ARCHIVE_EXT} "${DEST_HOST}:${DEST_PATH}" >/dev/null
    ${SSH_BIN} ${DEST_USER}@${DEST_HOST} "${RM_BIN} /Mirror/software/source/${INITIALS}${DEFAULT_ARCHIVE_EXT} ; source ~/.functions.sh && gather-source ${HTTP_PATH}/${INITIALS}${DEFAULT_ARCHIVE_EXT}" >/dev/null
    ${RM_BIN} -rf ./sofin-definitions ${INITIALS}${DEFAULT_ARCHIVE_EXT}
    note "Sofin v${version} deployed to: ${HTTP_PATH}"
fi
