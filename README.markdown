## Author:
Daniel (dmilith) Dettlaff (dmilith [at] verknowsys.com)
I'm also on #freebsd and #scala.pl @ freenode IRC.


## About:
This software is my way of how to get reliable, updatable, bundled, closed-dependency and fully
customizable software for FreeBSD servers.

    
## Features:
* User friendly, clean and clear colorful information. No magic. KISS and DRY driven development.
* Simple, <700LOC solution, based on legacy /bin/sh shell scripting language.
* Designed to work on all *BSD, but currently maintained and tested on FreeBSD only (>= 9.0-STABLE).
* Every "software" has own definition ("def" file) with defined flat dependency list and basic data.
  Every definition is sh script itself (More in definitions/skeleton.def and definitions/defaults.def)
* Supports selective application installation. (By "one" param. More in examples).
* Supports installation of user and system wide applications (more in examples).
* Has simple flat dependency managment. Sofin architecture is flexible enough to bundle almost any mix of requirements
  in application bundle, if only it's supported by given software. No need to install tons of useless/ not needed
  dependencies just because software supports it.
* Has simple way of creating "lists" of definitions to build. Just create a text file with your definitions in "lists/",
  directory, create/update definitions snapshot (using sofin-make-defs) and give that list filename to sofin
  as parameter (more in examples).
* Software patches are supported out of the box. The only thing required is to put patches into
  "definitions/patches/definition_file_name_without_def_extension/" directory. Sofin will do the rest.
* Software bundling. Every application is bundled separately with all dependencies in own root directory. The only external
  dependencies used by Sofin are those from base system. No other external dependencies allowed at all.
* Uses definitions snapshots in "tar.gz" format, generated by "sofin-make-defs" script also available in this repository.
  Currently You need to manually put generated "defs.tar.gz" into remote repository (defined in MAIN_SOURCE_REPOSITORY variable).
* Supports basic "marking" of status of installed applications/ dependencies to resume broken/ failed/ interrupted installation.
* You may feel safe upgrading only *one* software bundle without headache of "how it affects rest of my software".
  No application bundle will affect any other. Ever.
* Sofin is designed to not touch any part of system. The only exception is /etc/profile_sofin created after
  system wide software installation (/Software/)
* By default Sofin verbosity is limited to minimum. More detailed information is written to LOG file.
  (located in /Software/.cache/install.log by default or /Users/USER_NAME/.cache/install.log)


## Examples:
* Install software defined in a list called "http" (by default it will install definitions from list into /Software/):
    `sofin install http`
        
* Install one software from definition called "ruby.def" for user "dmilith" (by default it will point to /Users/dmilith/Apps/Ruby/):
    `sofin cherrypick ruby dmilith`
        
* Install software list called "databases" for user "dmilith" (by default it will point to /Users/dmilith/Apps/):
    `sofin install databases dmilith`

* Show list of installed software:
    `sofin installed`

* Uninstall installed software "SomeApp"?
    `sofin uninstall SomeApp`

* Give me "PATH" for all applications installed system wide (explained in pitfalls):
    `sofin getshellpath`

* Give me "PATH" for all applications of user "dmilith" (explained in pitfalls):
    `sofin getshellpath dmilith`

* Give me "LD_LIBRARY_PATH" for all applications of user "dmilith" (explained in pitfalls):
    `sofin getshellld dmilith`

* Create a list called "databases", with definitions: "postgresql" and "mysql", and install it with Sofin:
    `cd Sofin`
    `echo "postgresql\nmysql" > lists/databases`
    run `sofin-make-defs` to create a snapshot and upload it to Your remote respository.
    run `sofin install databases`


## Pitfalls/ Limitations:
* Sofin requires to be installed or symlinked to system default PATH location (/bin:/usr/bin or similar)
* Each software bundle includes all dependencies of given software, hence each application requires more disk
  space than it does with "old fasioned, system wide, shared software".
* Because every software bundle has own root dir, no ld information about libraries is provided by default
  by system, so software which uses shared libraries will require to have "LD_LIBRARY_PATH" set for linker.
  To generate this variable for currently installed software just run sofin with "getshellld" param.
  To get user side values give it additional param of user name (f.e. sofin getshellld username).
* To generate "PATH" variable from installed software use "getshellpath" param. To get user side values
  give it additional param of user name (f.e. sofin getshellpath username).
* Currently only "tar.gz" archives files are cached and supported. In case of using different archive
  type a failure will happen.
* Currently all software used by current definitions is mirrored on software.verknowsys.com/source
* Currently software.verknowsys.com repository is hardcoded into script. To maintain own definitions You may just
  fork and create own defs which I just merge into this repository or create own one somewhere.
* Currently any kind of sha/md5 checksumming isn't supported at all.
* Currently some definitions provided by Sofin include a couple of custom patches on software required
  by VerKnowSys ServeD Â© System. It *shouldn't* but **may** break the way how software works on different systems.


## We don't want to support broken technologies:
* Like.. for example: Subversion. Don't even try to create definition for this monster. It's not worth it. We support git and mercurial.
  That's enough for Your beautiful life. Believe me.
* TODO: fill this list with more GNU-ish software.


## License:
  Released under the BSD license.
