## Author:
Daniel (dmilith) Dettlaff (dmilith [at] verknowsys.com)
I'm also on #freebsd and #scala.pl @ freenode IRC.


## About:
This software is my way of how to get reliable, updatable, bundled, closed-dependency, secure and fully
customizable software for FreeBSD servers. Darwin (Mac OS X) support started with version >=0.14.10.


## Features:
* Designed to work on all *BSD and *Darwin.
* User friendly, clean and clear colorful information. No magic. KISS, DRY, BDD driven development.
* Simple, ~1k LOC solution, written in legacy /bin/sh shell scripting language.
* Every "software" has own definition ("def" file) with defined flat dependency list and basic information.
  Every definition is sh script itself (More in definitions/skeleton.def and definitions/defaults.def)
* Supports selective application installation. (By "one" param. More in examples).
* Supports installation of user and system wide applications (more in examples).
* Has simple flat dependency managment. Sofin architecture is flexible enough to bundle almost any mix of requirements in application bundle, if only it's supported by given software. No need to install tons of useless/ not needed dependencies just because software supports it.
* Has simple way of creating "lists" of definitions to build. Just create a text file with your definitions in "lists/" directory, create/update definitions snapshot (using sofin-make-defs) and give that list filename to sofin as parameter (more in examples).
* Software patches are supported out of the box. The only thing required is to put patches into "definitions/patches/definition_file_name_without_def_extension/" directory. Sofin will do the rest.
* Software bundling. Every application is bundled separately with all dependencies in own root directory. The only external dependencies used by Sofin are those from base system. No other external dependencies allowed at all.
* Uses definitions snapshots in "tar.gz" format, generated by "sofin-make-defs" script also available in this repository. Currently You need to manually put generated "defs.tar.gz" into remote repository (defined in MAIN_SOURCE_REPOSITORY variable).
* Supports basic "marking" of status of installed applications/ dependencies to resume broken/ failed/ interrupted installation.
* You may feel safe upgrading only *one* software bundle without headache of "how it affects rest of my software". No application bundle will affect any other. Ever.
* Sofin is designed to not touch any part of system. The only exception is /etc/profile_sofin created after system wide software installation (/Software/) in ServeD system.
* By default Sofin verbosity is limited to minimum. More detailed information is written to LOG file (located in /Software/.cache/install.log by default or /Users/USER_NAME/.cache/install.log)
* Exports. Each app has own ROOT_DIR/exports/ with symlinks to exported software. Exported software are just simple symlinks used to generate PATH environment variable.
* Sofin has own configuration file located in /etc/sofin.conf which is SH script itself.


## Examples:
* Install software defined in a list called "http":
    `sofin install http`

* Install one software from definition called "ruby.def" for current user:
    `sofin get ruby`

* Install one software from definition called "ruby.def" for user "dmilith" (by default it will point to /Users/dmilith/Apps/Ruby/):
    `sofin get ruby dmilith`

* Install software list called "databases" for user "dmilith" (by default it will point to /Users/dmilith/Apps/):
    `sofin install databases dmilith`

* Upgrade application requirement: Xml in bundle Ruby as logged in user:
    `sofin upgrade libxml2 ruby`

* Upgrade Ruby in Ruby bundle without recompiling all requirements (already compiled requirements will be reused):
    `sofin upgrade ruby ruby`

* Show list of available software:
    `sofin available`

* Show list of installed software:
    `sofin fullinstalled` or `sofin installed`

* Export "ruby" binary from "Passenger" bundle: `sofin export ruby Passenger`

* Uninstall installed software "SomeApp"?
    `sofin uninstall someApp`

* Give me "PATH" for all applications installed system wide (explained in pitfalls):
    `sofin getshellpath`

* Give me "PATH" for all applications of user "dmilith" (explained in pitfalls):
    `sofin getshellpath dmilith`

* Give me "LD_LIBRARY_PATH" for all applications of user "dmilith" (explained in pitfalls):
    `sofin getshellld dmilith`

* Create a list called "databases", with definitions: "postgresql" and "mysql", and install it with Sofin:
    `cd Sofin`
    `echo "postgresql\nmysql" > lists/databases`
    run `./sofin-make-defs` to create a snapshot and upload it to Your remote respository.
    run `sofin install databases`


## Differences from [POSIX](https://en.wikipedia.org/wiki/POSIX) and [FHS](https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard) standards:
* Sofin provides a slightly different approach to shell PATH variable. By default user PATH variable is overriden to include APP-PREFIX/exports instead of default APP-PREFIX/(s)bin. After each successful software installation sofin will populate APP-PREFIX/exports with relative symlinks to existing binaries of bundle. Application exports are defined in "APP_EXPORTS" variable (available for any definition).
* Sofin suggests empty /usr/local folder. It's caused by POSIX "shared nature" of /usr/local. Sofin was built against this rule to prevent cross requirements between prefixes (/opt/X11 is an exception on Darwin), and to make sure that each software is easily movable between machines with same architecture.
* Each application has own "root" directory (Similar to Mac OS X software in *.app folders).
* Each software bundle includes all dependencies of given software, hence application bundle requires more disk
space than it does with "old fasioned, system wide, shared software".


## Pitfalls/ Limitations:
* Linux/ Windows aren't supported, but Sofin will run just fine everywhere after a couple of configuration fights.
* Sofin is designed, tested and supported under both 64bit: Darwin 12.2.0 and FreeBSD 9.0/9.1, but it should also work on any compliant architectures as well.
* Sofin requires to be installed or symlinked to system default PATH location (/bin or /usr/bin but not /usr/local). By default Sofin includes installation script: "sofin-install".
* Currently all official Sofin software used by current definitions is mirrored only on software.verknowsys.com/source and software.verknowsys.com/binary.
* Currently some definitions provided by Sofin include a couple of custom patches on software required by VerKnowSys ServeD Â© System. Patches usually comes from current FreeBSD ports.
* Some definitions with X11 requirement will need XQuartz installation. (Darwin hosts only).


## License:
  Released under the [BSD](https://en.wikipedia.org/wiki/BSD_License) license.
